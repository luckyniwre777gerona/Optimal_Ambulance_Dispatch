import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint
from scipy.linalg import qr
from mpl_toolkits.mplot3d import Axes3D
import tensorflow as tf
from tensorflow import keras
import os
import cv2

for z in range(0,99):
	image = np.zeros((100,100))
	x_coor = []

	for i in range(0,99):
		P = np.random.choice(100,1, p=[0.02, 0.02, 0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.02,	0.015,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.01,	0.005,	0.005,	0.005,	0.005,	0.005,	0.005,	0.005,	0.005,	0.005,	0.005,	0.005,	0.005,	0.005,	0.005,	0.005,	0.005,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001,	0.001])
		x_coor.append(P[0])

	y_coor = []

	for i in x_coor:
		if 0 < i <= 33:
			P = np.random.choice(100,1, p=[ 0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0013,			0.0046,			0.0046,			0.0046,			0.0046,			0.0046,			0.0084,		0.0084,			0.0084,			0.0084,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0051,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,		0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.0134,			0.02,			0.02,			0.02,			0.02,			0.02,			0.02,			0.02,			0.02,			0.02,			0.02,			0.02,			0.02,			0.02,			0.02,		0.02,			0.02,			0.02,			0.02,			0.02,			0.02,			0.0134,			0.0134,			0.0134,			0.0134])
		elif 33 < i < 81:
			P = np.random.choice(100,1, p=[ 0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.01,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.015,			0.015,			0.015,			0.015,			0.015,			0.015,			0.015,			0.015,			0.015,			0.015,			0.015,			0.015,			0.015,			0.015,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005])
		else:
			P = np.random.choice(100,1, p=[ 0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.005,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125,			0.01125])
		y_coor.append(P[0])
		
	for i in range(0,99):
		n = int(x_coor[int(i)])
		m = int(y_coor[int(i)])
		image[m,n] = 1

	fig = plt.figure(frameon=False)
	ax = plt.Axes(fig, [0., 0., 1., 1.])
	ax.set_axis_off()
	fig.add_axes(ax)
	ax.imshow(image)
	plt.savefig('Train/Image' + str(z) + '.png', bbox_inches='tight', pad_inches=0)
		